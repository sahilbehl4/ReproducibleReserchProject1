pal(1)
pal(seq(1,1,len=6))
pal(seq(0,1,len=6))
library(swirl)
swirl()
p1<-colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(20)
showMe(p2(2))
p1
?fun
?rgb
col\
p3<-colorRampPalette(c("blue","green"));
p3<-colorRampPalette(c("blue","green"),alpha=0.5);
p3(5)
library(swirl)
swirl()
exit()
skip()
library(swirl)
swirl()
head(airquality)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
hist(airquality$Ozone)
table(airquality$Month)
?table
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col,axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red",title="Ozone and Wind in New York City")
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
?par
par()$pin
par$fg
par()$fg
par()$pch
par("lty")
plot(airquality$Wind,airquality$Ozone,type = "n")
title(main = "Wind and Ozine in NYC")
title(main = "Wind and Ozone in NYC")
may<-subset(airquality,airquality$Month==5)
may<-subset(airquality,Month==5)
points(may$wind,may$Ozone,pch=2,col="blue")
library(swirl)
swirl()
points()
head(may)
?points
points(may$Wind,may$Ozone,col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
plot(may$Wind,may$Ozone)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality, month!=5)
notmay<-subset(airquality, Month!=5)
points(notmay$Ozone,notmay$Wind,col="red",pch=8)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend(topright,c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline()
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=C(4,4,2,1),oma=c(0,0,2,0))
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main = "Ozone and Wind")
library(swirl)
swirl()
plot(airquality$Solar.R,airquality$Ozone,main = "Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City",outer = TRUE)
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col="red",pch=8)
xyplot(Ozone~Wind,airquality,col="red",pch=8.main="Big Apple Data")
xyplot(Ozone~Wind,airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind|as.factor(month),airquality)
xyplot(Ozone~Wind|as.factor(Month),airquality,layout = c(5,1))
xyplot(Ozone~Wind|Month,airquality,layout = c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
exists()
exist()
library('swirl')
swirl()
str(mpg)
qplot(disp,hwy,data=mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg, color = drv)
qplot(displ,hwy,data=mpg, color = drv,geom = c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,dta=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot")
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufracture)
qplot(drv,hwy,data=mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(disp,hwy,data=mpg,.~drv)
qplot(displ,hwy,data=mpg,.~drv)
qplot(displ ,hwy ,data = mpg,. ~ drv)
qplot(displ ,hwy ,data = mpg,facets= . ~ drv)
qplot(hwy ,data = mpg,facets= drv ~ .,binwidth = 2)
x <- rnorm(10,0,1)
mean(x)
x
sd(x)
y <- rnorm(10,0,1)
y
plot(y)
plot(y)
plot(x)
summary(x)
x
?pnorm
pnorm(x,0,1)
swirl()
swift()
library(swirl)
esc
exit()
exit
rbinom(4,1,0.5)
rbinom(4,1,0.5)
rbinom(4,1,0.5)
rbinom(4,1,0.5)
rbinom(4,1,0.5)
rbinom(4,1,0.5)
rbinom(4,2,0.5)
rbinom(2,3,0.5)
rbinom(2,3,0.5)
rbinom(2,3,0.5)
rbinom(5,2,0.167)
rbinom(2,5,0.167)
rbinom(2,5,0.167)
rbinom(2,5,0.167)
rbinom(2,5,0.167)
rbinom(2,5,0.167)
rbinom(2,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.167)
rbinom(5,5,0.97)
rbinom(5,5,0.97)
rbinom(5,5,0.97)
rbinom(5,5,0.97)
rbinom(5,5,0.97)
rbinom(5,5,0.97)
rbinom(100,1,0.5)
x <- rbinom(100,1,0.5)
barplot(x)
x <- rbinom(100,5,0.5)
barplot(x)
dinom(x,1,0.5)
dbinom(x,1,0.5)
barplot(dbinom(x,1,0.5))
barplot(dbinom(0:4,4,0.5))
dbinom(0:4,4,0.5)
swirl()
?sample
sample(1:6,4,replace = TRUE)
sample(1:6,4,replace = TRUE)
sample(1:20,10,replace = FALSE)
sample(1:20,10)
LETTERS
sample(LETTERS)
flips <- sample((0,1),100,replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1),100,replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100, prob = 0.7)
flips2 <- rbinom(1,size = 100, prob = 0.7)
flips2 <- rbinom(100,size = 1, prob = 0.7)
flips2
sum(heads)
sum(flips2)
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois <- replicate(100,rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1.SysDate()
d1<-Sys.Date()
class(dl)
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1.weekdays()
weekdays(d1)
months(t1)
quarter(t2)
quarters(t2)
t3 <-  "October 17, 1986 08:24"
strptime(t3 ,"%B %d, %Y %H:%M")
t4 <- strptime(t3 ,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() 1 t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(swift)
library(swirl)
swirl()
esc
exit()
exit
library(swirl)
swirl()
mydf = read.csv(path2csv,stringsAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran,
| r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran,country =="India",r_version <= "3.0.2")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, r_version == !is.na(r_version))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,country,des(r_version),desc(ip_id))
arrange(cran2,country,desc(r_version),desc(ip_id))
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col = "red", pch = 8 )
xyplot(Ozone~Wind,airquality,col = "red", pch = 8, main = "Big Apple Data" )
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind| as.factor(Month),airquality, layout = c(5,1))
xyplot(Ozone~Wind|Month,airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,airquality)
print(p)
names(p)
library(swirl)
swirl()
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout = c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R")
pathtofile("plot1.R", local = TRUE)
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit(myLabels.R)
myedit("myLabels.R")
myxlab <- "Carat"
source(pathtofile("myLabels.R"),local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20 xlab= myxlab, ylab= myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab= myxlab, ylab= myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab= myxlab, ylab= myylab, main = mymain)
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg,color = drv)
qplot(displ,hwy,data = mpg,color = drv,geom = c("point","smooth"))
qplot(y = hwy,data = mpg,color = drv)
myhigh
qplot(drv,hwy,data = mpg, geom = "boxplot")
qplot(drv,hwy,data = mpg, geom = "boxplot",color = manufacturer)
qplot
qplot(hwy,data = mpg, fill = drv)
qplot(displ,hwy,data = mpg, . ~ drv)
qplot(displ,hwy,data = mpg,facets = . ~ drv)
qplot(hwy,data = mpg,facets = . ~ drv, binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
mpg
str(mpg)
qplot(displ, hwy,data = mpg)
qplot(displ, hwy,data = mpg, color = drv)
qplot(displ, hwy,data = mpg, color = drv, geom = c("point"))
qplot(displ, hwy,data = mpg, color = drv, geom = c("point","smooth"))
qplot(hwy,data = mpg)
qplot(hwy,data = mpg,fill = srv)
qplot(hwy,data = mpg,fill = drv)
qplot(hwy,data = mpg)
qplot(hwy,data = mpg,binwidth = 2)
qplot(hwy,data = mpg)
qplot(hwy,data = mpg,binwidth = 10)
qplot(hwy,data = mpg,binwidth = 0)
qplot(hwy,data = mpg,binwidth = 1)
qplot(hwy,data = mpg,binwidth = 2)
qplot(hwy,data = mpg,binwidth = 10)
qplot(hwy,data = mpg,binwidth = 2)
qplot(hwy,data = mpg,geom = "boxplot")
qplot(drv,hwy,data = mpg,geom = "boxplot")
swirl()
qplot(displ,hwy,data = mpg, geom = c("point","smooth"), facet = . ~ drv)
qplot(displ,hwy,data = mpg, geom = c("point","smooth"), facets = . ~ drv)
g <- ggplot(mpg,aes(displ,hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth("lm")
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) ++ ggtitle("Swirl Rules!")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink, size = 4, alpha = 1/2")
g + geom_point(color = "pink", size = 4, alpha = 1/2")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement",y = "Hwy Mileage")
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + geom_smooth(size = 4. method = "lm", se = FALSE)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv)) + geom_smooth(size = 4, method = "lm", se = FALSE)
geom_point(aes(color = drv),size=2,alpha=1/2) +
geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) +
geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx,myy,type = "l",ylim = c(-3,3))
g <- ggplot(data = testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = mpg, aes(x= displ, y= hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom geom = "density")
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat,price,data = diamonds)
qplot(carat,price,data = diamonds, shape = cut)
qplot(carat,price,data = diamonds, color = cut)
qplot(carat,price,data = diamonds, color = cut, geom_smooth = "leon")
qplot(carat,price,data = diamonds, color = cut) geom_smooth()
qplot(carat,price,data = diamonds, color = cut) + geom_smooth()
qplot(carat,price,data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat,price,data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(,"")
g <- ggplot(data = diamonds,aes(depth,price))
summary(g)
g+ geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth,prine)
g <- ggplot(data = diamonds, aes(depth,price))
g + geom_points(alpha = 1/3) + facet_grid(cut ~ car2)
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_points(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size =3, color = "pink")
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size =3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
setwd("~/DSS/datasciencecoursera/R Programs/Reproductive Reserch Project 1")
dir.create("figures")
unzip(zipfile = "activity.zip")
activity_mon_data <- read.csv('activity.csv')
steps_by_date <- split(activity_mon_data$steps, activity_mon_data$date)
total_steps_by_date <- sapply(steps_by_date, sum, na.rm = TRUE)
library(ggplot2)
qplot(total_steps_by_datebinwidth=1000)
dev.copy(png, "plot1.png")
dev.off()
qplot(total_steps_by_date,binwidth=1000)
dev.copy(png, "plot1.png")
dev.copy(png, "plot1.png")
dev.off()
qplot(total_steps_by_date,binwidth=1000)
dev.copy(png, "plot1.png")
dev.off()
averages <- aggregate(x=list(steps = data$steps), by=list(interval = data$interval),
FUN=mean, na.rm=TRUE)
g <- ggplot(averages, aes(interval,steps))
averages <- aggregate(x=list(steps = data$steps), by=list(interval = data$interval),
FUN=mean, na.rm=TRUE)
averages <- aggregate(x=list(steps = activity_mon_data$steps), by=list(interval = activity_mon_data$interval),
FUN=mean, na.rm=TRUE)
g <- ggplot(averages, aes(interval,steps))
g +
geom_line() +
ggtitle("Time series plot of the average number of steps taken")
dev.copy(png, "plot2.png")
dev.off()
missing <- is.na(activity_mon_data$steps)
total_missing <- sum(missing)
total_missing
i<-1
imputed_data <- activity_mon_data
while(i<= nrow(imputed_data)){
if(is.na(imputed_data[i,1]))
{
interval_missing <- imputed_data[i,3]
imputed_data[i,1] <- averages[averages$interval == interval_missing,2]
}
i <- i + 1
}
steps_by_date <- split(imputed_data$steps, imputed_data$date)
imp_total_steps <- sapply(steps_by_date, sum, na.rm = TRUE)
par(mfrow = c(1,2), mar = c(2,2,2,2))
hist(imp_total_steps, main = "Histogram for imputed data",xlab = "Total steps")
hist(total_steps_by_date, main = "Histogram for data",xlab = "Total steps")
imp_mean_steps <- mean(imp_total_steps, na.rm = TRUE)
imp_median_steps <- median(imp_total_steps, na.rm =TRUE)
dev.copy(png, "plot3.png")
dev.off()
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday",  "Friday")
imputed_data$dow = as.factor(ifelse(is.element(
weekdays(as.Date(imputed_data$date)),
weekdays),
"Weekday", "Weekend"))
steps_by_interval_i <- aggregate(steps ~ interval + dow, imputed_data, mean)
library(lattice)
xyplot(steps_by_interval_i$steps ~ steps_by_interval_i$interval|steps_by_interval_i$dow,
main="Average Steps per Day by Interval",
xlab="Interval",
ylab="Steps",
layout=c(1,2),
type="l")
dev.copy(png, "plot4.png")
dev.off()
